$font-poppins: 'Poppins', sans-serif;

$fw-t: 100;
$fw-el: 200;
$fw-l: 300;
$fw-r: 400;
$fw-m: 500;
$fw-sb: 600;
$fw-b: 700;
$fw-eb: 800;
$fw-bl: 900;

$white: #fff;
$text-dark: #001c43;
$bg-dark: #050b25;
$bg-light: #01142e;

// START FUNCTION
@mixin flex($j, $a, $g) {
  display: flex;
  justify-content: $j;
  align-items: $a;
  gap: $g;
}

// START BREAKPOINT VARIABLES
@mixin min-extra-desktop {
  @media (min-width: 1440.99px) {
    @content;
  }
}

@mixin min-desktop {
  @media (min-width: 1200px) {
    @content;
  }
}

@mixin min-landscape {
  @media (min-width: 768px) {
    @content;
  }
}

@mixin extra-desktop {
  @media (max-width: 1440.98px) {
    @content;
  }
}

@mixin large-desktop {
  @media only screen and (max-width: 1399.98px) {
    @content;
  }
}

@mixin desktop {
  @media only screen and (max-width: 1199.98px) {
    @content;
  }
}

@mixin small-desktop {
  @media only screen and (max-width: 1023.98px) {
    @content;
  }
}

@mixin tablet {
  @media only screen and (max-width: 991.98px) {
    @content;
  }
}

@mixin landscape-phone {
  @media only screen and (max-width: 767.98px) {
    @content;
  }
}

@mixin extra-mobile {
  @media only screen and (max-width: 576.98px) {
    @content;
  }
}

@mixin mobile {
  @media only screen and (max-width: 480.98px) {
    @content;
  }
}

@mixin small-mobile {
  @media only screen and (max-width: 391.98px) {
    @content;
  }
}
// END BREAKPOINT VARIABLES

// WIDTH CONTAINER VARIABLES
// body {
//   --width-container: 1160px;
//   @include desktop {
//     --width-container: 936px;
//   }
//   @include tablet {
//     --width-container: 699px;
//   }
//   @include landscape-phone {
//     --width-container: 519px;
//   }
//   @include extra-mobile {
//     --width-container: 100%;
//   }
// }

@function calculateTypeOffset($lh, $fontSize, $descenderHeightScale) {
  $lineHeightScale: $lh / $fontSize;
  @return ($lineHeightScale - 1) / 2 + $descenderHeightScale;
}

@mixin basekick(
  $typeSizeModifier,
  $baseFontSize,
  $descenderHeightScale,
  $typeRowSpan,
  $gridRowHeight,
  $capHeight
) {
  $fontSize: $typeSizeModifier * $baseFontSize;
  $lineHeight: $typeRowSpan * $gridRowHeight;
  $typeOffset: calculateTypeOffset(
    $lineHeight,
    $fontSize,
    $descenderHeightScale
  );
  $topSpace: $lineHeight - $capHeight * $fontSize;
  $heightCorrection: 0;

  @if $topSpace > $gridRowHeight {
    $heightCorrection: $topSpace - ($topSpace % $gridRowHeight);
  }

  $preventCollapse: 1;

  font-size: #{$fontSize}px;
  line-height: #{$lineHeight}px;
  transform: translateY(#{$typeOffset}em);
  padding-top: $preventCollapse;
  &::before {
    content: '';
    margin-top: #{-($heightCorrection + $preventCollapse)}px;
    display: block;
    height: 0;
  }
}

@mixin btn {
  margin-top: 22px;
  width: 228px;
  height: 48px;
  text-transform: uppercase;
  border-radius: 3px 30px 3px 30px;
  border: 1px solid white;
  display: flex;
  justify-content: center;
  align-items: center;
  cursor: pointer;
  transition: background-color 0.3s ease-in-out;
}

@mixin text-transparent {
  color: transparent;
  -webkit-text-stroke: 1px white;
}

@mixin text-uppercase($fontSize, $fontWeight) {
  font-size: $fontSize;
  font-weight: $fontWeight;
  text-transform: uppercase;
}
